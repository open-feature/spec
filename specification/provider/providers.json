[
    {
        "id": "Requirement 2.1",
        "clean id": "requirement_2_1",
        "content": "The provider interface MUST define a `name` field or accessor, which identifies the provider implementation.",
        "RFC 2119 keyword": "MUST",
        "children": []
    },
    {
        "id": "Requirement 2.2",
        "clean id": "requirement_2_2",
        "content": "The `feature provider` interface MUST define methods to resolve flag values, with parameters `flag key` (string, required), `default value` (boolean | number | string | structure, required), `evaluation context` (optional), and `evaluation options` (optional), which returns a `flag resolution` structure.",
        "RFC 2119 keyword": "MUST",
        "children": []
    },
    {
        "id": "Condition 2.3",
        "clean id": "condition_2_3",
        "content": "The implementing language type system differentiates between strings, numbers, booleans and structures.",
        "RFC 2119 keyword": null,
        "children": [
            {
                "id": "Conditional Requirement 2.3.1",
                "clean id": "conditional_requirement_2_3_1",
                "content": "The `feature provider` interface MUST define methods for typed flag resolution, including boolean, numeric, string, and structure.",
                "RFC 2119 keyword": "MUST",
                "children": []
            }
        ]
    },
    {
        "id": "Requirement 2.4",
        "clean id": "requirement_2_4",
        "content": "In cases of normal execution, the `provider` MUST populate the `flag resolution` structure's `value` field with the resolved flag value.",
        "RFC 2119 keyword": "MUST",
        "children": []
    },
    {
        "id": "Requirement 2.5",
        "clean id": "requirement_2_5",
        "content": "In cases of normal execution, the `provider` SHOULD populate the `flag resolution` structure's `variant` field with a string identifier corresponding to the returned flag value.",
        "RFC 2119 keyword": "SHOULD",
        "children": []
    },
    {
        "id": "Requirement 2.6",
        "clean id": "requirement_2_6",
        "content": "The `provider` SHOULD populate the `flag resolution` structure's `reason` field with a string indicating the semantic reason for the returned flag value.",
        "RFC 2119 keyword": "SHOULD",
        "children": []
    },
    {
        "id": "Requirement 2.7",
        "clean id": "requirement_2_7",
        "content": "In cases of normal execution, the `provider` MUST NOT populate the `flag resolution` structure's `error code` field, or otherwise must populate it with a null or falsy value.",
        "RFC 2119 keyword": "MUST NOT",
        "children": []
    },
    {
        "id": "Requirement 2.8",
        "clean id": "requirement_2_8",
        "content": "In cases of abnormal execution, the `provider` MUST indicate an error using the idioms of the implementation language, with an associated error code having possible values `\"PROVIDER_NOT_READY\"`, `\"FLAG_NOT_FOUND\"`, `\"PARSE_ERROR\"`, `\"TYPE_MISMATCH\"`, or `\"GENERAL\"`.",
        "RFC 2119 keyword": "MUST",
        "children": []
    },
    {
        "id": "Condition 2.9",
        "clean id": "condition_2_9",
        "content": "The implementation language supports generics (or an equivalent feature).",
        "RFC 2119 keyword": null,
        "children": [
            {
                "id": "Conditional Requirement 2.9.1",
                "clean id": "conditional_requirement_2_9_1",
                "content": "The `flag resolution` structure SHOULD accept a generic argument (or use an equivalent language feature) which indicates the type of the wrapped `value` field.",
                "RFC 2119 keyword": "SHOULD",
                "children": []
            }
        ]
    },
    {
        "id": "Requirement 2.10",
        "clean id": "requirement_2_10",
        "content": "The provider interface MAY define a `context transformer` method or function, which can be optionally implemented in order to transform the `evaluation context` prior to flag value resolution.",
        "RFC 2119 keyword": "MAY",
        "children": []
    },
    {
        "id": "Condition 2.11",
        "clean id": "condition_2_11",
        "content": "The implementation language supports generics (or an equivalent feature).",
        "RFC 2119 keyword": null,
        "children": [
            {
                "id": "Conditional Requirement 2.11.1",
                "clean id": "conditional_requirement_2_11_1",
                "content": "If the implementation includes a `context transformer`, the provider SHOULD accept a generic argument (or use an equivalent language feature) indicating the type of the transformed context.If such type information is supplied, more accurate type information can be supplied in the flag resolution methods.",
                "RFC 2119 keyword": "SHOULD",
                "children": []
            }
        ]
    }
]